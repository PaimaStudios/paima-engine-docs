"use strict";(self.webpackChunkpaima_engine_docs=self.webpackChunkpaima_engine_docs||[]).push([[400],{1666:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=a(5893),r=a(1151);const i={},s="Cardano Mint and Burn {#mint-burn}",o={id:"home/react-to-events/primitive-catalogue/cardano/cardano-mint-burn",title:"Cardano Mint and Burn",description:"mint-burn}",source:"@site/docs/home/300-react-to-events/2-primitive-catalogue/20-cardano/40-cardano-mint-burn.md",sourceDirName:"home/300-react-to-events/2-primitive-catalogue/20-cardano",slug:"/home/react-to-events/primitive-catalogue/cardano/cardano-mint-burn",permalink:"/ja/home/react-to-events/primitive-catalogue/cardano/cardano-mint-burn",draft:!1,unlisted:!1,editUrl:"https://github.com/PaimaStudios/paima-engine-docs/docs/home/300-react-to-events/2-primitive-catalogue/20-cardano/40-cardano-mint-burn.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cardano Transfer",permalink:"/ja/home/react-to-events/primitive-catalogue/cardano/cardano-transfer"},next:{title:"Create your own Primitive",permalink:"/ja/home/react-to-events/primitive-catalogue/create-your-own"}},c={},d=[{value:"Example",id:"example",level:3},{value:"Meaning",id:"meaning",level:3},{value:"Paima Concise format",id:"paima-concise-format",level:3}];function l(e){const n={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"mint-burn",children:"Cardano Mint and Burn"}),"\n",(0,t.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'extensions:\n  - name: "CARDANO-MINT-BURN"\n    type: cardano-mint-burn\n    policyIds: \n      - "0fc891fb7368d3b7c7b88815c203fda0d6862b0f1d797222672e91fe"\n      - "0fc891fb7368d3b7c7b88815c203fda0d6862b0f1d797222672e91ff"\n    startSlot: 722300\n    stopSlot: 733216\n    scheduledPrefix: cmb\n    network: CardanoNetworkConfigEntryName\n'})}),"\n",(0,t.jsx)(n.h3,{id:"meaning",children:"Meaning"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"startSlot"})," is required and means that only mints events after that slot (exclusive) will be considered."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stopSlot"})," is optional, and it stops the indexing at that point."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"policyIds"})," is an array with the collections to index."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"paima-concise-format",children:"Paima Concise format"}),"\n",(0,t.jsx)(n.p,{children:"The scheduled input for each event is of the following form."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cardanoMint = cmb|txId|metadata|assets\n"})}),"\n",(0,t.jsx)(n.p,{children:"It can be parsed with a rule of the form:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const cardanoMint: ParserRecord<CardanoMint> = {\n  txId: PaimaParser.NCharsParser(0, 64),\n  metadata: PaimaParser.OptionalParser(null, PaimaParser.RegexParser(/[a-f0-9]*/)),\n  assets: (keyName: string, input: string) => {\n    return JSON.parse(input);\n  },\n};\n\nexport interface CardanoMint {\n  txId: string;\n  metadata: string | null;\n  assets: { asset: { policyId: string; assetName: string }; amount: string };\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"metadata"})," field is hex encoded (if any), and it's the metadata in binary\nform."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"assets"})," field has the minted or burned assets. The difference between a\nmint and a burn is in the sign of ",(0,t.jsx)(n.code,{children:"amount"})," when interpreted as a number."]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>o,a:()=>s});var t=a(7294);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);