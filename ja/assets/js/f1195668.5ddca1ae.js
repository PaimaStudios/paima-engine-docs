"use strict";(self.webpackChunkpaima_engine_docs=self.webpackChunkpaima_engine_docs||[]).push([[5867],{7697:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var t=a(5893),r=a(1151);const s={},i="Cardano Transfer {#transfer}",o={id:"home/react-to-events/primitive-catalogue/cardano/cardano-transfer",title:"Cardano Transfer",description:"transfer}",source:"@site/docs/home/300-react-to-events/2-primitive-catalogue/20-cardano/30-cardano-transfer.md",sourceDirName:"home/300-react-to-events/2-primitive-catalogue/20-cardano",slug:"/home/react-to-events/primitive-catalogue/cardano/cardano-transfer",permalink:"/ja/home/react-to-events/primitive-catalogue/cardano/cardano-transfer",draft:!1,unlisted:!1,editUrl:"https://github.com/PaimaStudios/paima-engine-docs/docs/home/300-react-to-events/2-primitive-catalogue/20-cardano/30-cardano-transfer.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Delayed State",permalink:"/ja/home/react-to-events/primitive-catalogue/cardano/delayed-state"},next:{title:"Cardano Mint and Burn",permalink:"/ja/home/react-to-events/primitive-catalogue/cardano/cardano-mint-burn"}},d={},c=[{value:"Example",id:"example",level:3},{value:"Meaning",id:"meaning",level:3},{value:"Paima Concise format",id:"paima-concise-format",level:3}];function l(e){const n={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"transfer",children:"Cardano Transfer"}),"\n",(0,t.jsx)(n.p,{children:"Keeps track of the entire (between the indexed slots) transaction history of a\npayment credential or particular address."}),"\n",(0,t.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'extensions:\n  - name: "CardanoTransfer"\n    type: cardano-transfer\n    credential: 8200581c55edc34de172a4a3ba9cac51f041187c84478d68e788dd6cf6f0b3d9 \n    startSlot: 12472120\n    stopSlot: 12500000\n    scheduledPrefix: ct\n    network: CardanoNetworkConfigEntryName\n'})}),"\n",(0,t.jsx)(n.h3,{id:"meaning",children:"Meaning"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"startSlot"})," is required and means that only transactions that happen after that slot (exclusive) will be considered."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stopSlot"})," is optional, and it stops the indexing at that point."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"credential"})," can be a hex encoded payment credential, in which case all\nassociated addresses are indexed, regardless of the staking part. Or it can be\nbech32 address instead, in this case the indexed transactions are those with the\nsame exact address (same payment part and staking part)."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"paima-concise-format",children:"Paima Concise format"}),"\n",(0,t.jsx)(n.p,{children:"The scheduled input for each event is of the following form."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cardanoTransfer  = ct|txId|metadata|inputCredentials|outputs\n"})}),"\n",(0,t.jsx)(n.p,{children:"It can be parsed with a rule of the form:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const cardanoTransfer: ParserRecord<CardanoTransfer> = {\n  txId: PaimaParser.NCharsParser(0, 64),\n  metadata: PaimaParser.OptionalParser(null, PaimaParser.RegexParser(/[a-f0-9]*/)),\n  inputCredentials: PaimaParser.ArrayParser({\n    item: PaimaParser.RegexParser(/[a-f0-9]*/),\n  }),\n  outputs: (keyName: string, input: string) => {\n    return JSON.parse(input);\n  },\n};\n\ninterface CardanoTransfer {\n  txId: string;\n  metadata: string | null;\n  inputCredentials: string[];\n  outputs: {\n    asset: { policyId: string; assetName: string } | null;\n    amount: string;\n    address: string;\n  }[];\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The metadata field is in its binary form, but hex encoded."}),"\n",(0,t.jsxs)(n.li,{children:["The entries in ",(0,t.jsx)(n.code,{children:"inputCredentials"})," are also hex encoded. Each one is the binary\nrepresentation of the payment key (64 characters or 32 bytes)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"outputs"})," preserves the same order as in the binary transaction. The ",(0,t.jsx)(n.code,{children:"asset"}),"\nwill be ",(0,t.jsx)(n.code,{children:"null"})," when the amount is in lovelace."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>o,a:()=>i});var t=a(7294);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);