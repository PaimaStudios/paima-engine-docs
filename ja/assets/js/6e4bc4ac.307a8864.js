"use strict";(self.webpackChunkpaima_engine_docs=self.webpackChunkpaima_engine_docs||[]).push([[5031],{2979:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var r=s(5893),a=s(1151);const i={},t="Deploying a Game in Production",c={id:"home/releasing-a-game/deployment",title:"Deploying a Game in Production",description:"This guide will show you the steps to deploy the backend and frontend of your game, so players can connect from the internet and play and interact.",source:"@site/docs/home/600-releasing-a-game/3-deployment.md",sourceDirName:"home/600-releasing-a-game",slug:"/home/releasing-a-game/deployment",permalink:"/ja/home/releasing-a-game/deployment",draft:!1,unlisted:!1,editUrl:"https://github.com/PaimaStudios/paima-engine-docs/tree/main/docs/home/600-releasing-a-game/3-deployment.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Game Versioning",permalink:"/ja/home/releasing-a-game/versioning"},next:{title:"Introduction",permalink:"/ja/home/multichain-support/nfts/introduction"}},l={},o=[{value:"Requirements",id:"requirements",level:2},{value:"Backend",id:"backend",level:2},{value:"Software Verification",id:"software-verification",level:3},{value:"ssh",id:"ssh",level:4},{value:"ubuntu",id:"ubuntu",level:4},{value:"nginx",id:"nginx",level:4},{value:"docker",id:"docker",level:4},{value:"Installation",id:"installation",level:3},{value:"Run Database",id:"run-database",level:3},{value:"Deploy Contracts",id:"deploy-contracts",level:3},{value:"Run Game Backend with Paima Engine",id:"run-game-backend-with-paima-engine",level:3},{value:"Setup Files",id:"setup-files",level:4},{value:"Backend Reverse Proxy",id:"backend-reverse-proxy",level:4},{value:"Backups (OPTIONAL)",id:"backups-optional",level:4},{value:"Game Service",id:"game-service",level:4},{value:"Frontend",id:"frontend",level:2},{value:"Updating, Maintenance &amp; Logs",id:"updating-maintenance--logs",level:3},{value:"Logs",id:"logs",level:4},{value:"Update Game Code",id:"update-game-code",level:4},{value:"Update Frontend Code",id:"update-frontend-code",level:4},{value:"Reset the database",id:"reset-the-database",level:4}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"deploying-a-game-in-production",children:"Deploying a Game in Production"}),"\n",(0,r.jsx)(n.p,{children:"This guide will show you the steps to deploy the backend and frontend of your game, so players can connect from the internet and play and interact."}),"\n",(0,r.jsx)(n.p,{children:"Deploying a Game in a production environment requirements will depend on the amount of players, interactions, number of backups, and many other factors. This guide is a starting point to run your services. We will not go in depth of each command/setup and some configurations will depend on your providers and exact software versions."}),"\n",(0,r.jsx)(n.p,{children:"We recommend using a cloud provider to create a virtual machine, as they will provide a server with a public IP."}),"\n",(0,r.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Your game must be working locally."}),"\n",(0,r.jsxs)(n.li,{children:["Server with:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ubuntu 24.04 LTS Linux"}),"\n",(0,r.jsx)(n.li,{children:"Public IP"}),"\n",(0,r.jsx)(n.li,{children:"Sudo Access"}),"\n",(0,r.jsx)(n.li,{children:"SSH Access"}),"\n",(0,r.jsx)(n.li,{children:"As an absolute minimum use a server with 2GB RAM / 1 CPU / 25GB Storage (These requirements will change depending on your specific project needs)"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"DNS Provider"}),"\n",(0,r.jsxs)(n.li,{children:["Additional Software","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Docker (",(0,r.jsx)(n.a,{href:"https://docs.docker.com/engine/install/ubuntu/",children:"https://docs.docker.com/engine/install/ubuntu/"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Nginx (",(0,r.jsx)(n.a,{href:"https://ubuntu.com/tutorials/install-and-configure-nginx",children:"https://ubuntu.com/tutorials/install-and-configure-nginx"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"backend",children:"Backend"}),"\n",(0,r.jsxs)(n.p,{children:["Before starting we recommend you create a user, and do not use the root account.\nWe will be using a user called ",(0,r.jsx)(n.code,{children:"paima"})," for all examples."]}),"\n",(0,r.jsx)(n.h3,{id:"software-verification",children:"Software Verification"}),"\n",(0,r.jsx)(n.h4,{id:"ssh",children:"ssh"}),"\n",(0,r.jsxs)(n.p,{children:["Let's verify you can connect to your machine via ",(0,r.jsx)(n.code,{children:"ssh"}),".",(0,r.jsx)(n.br,{}),"\n","From your terminal you must be able to connect your server."]}),"\n",(0,r.jsx)(n.p,{children:"For these examples, we will use the follow naming:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"paima@10.0.0.1"})," as the ",(0,r.jsx)(n.code,{children:"server public IP"}),". You must use your own ",(0,r.jsx)(n.code,{children:"IP"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"user-name"})," as the username. Must be updated with the machine's user-name"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"my-game"})," as the game's name."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"local $>"})," for commands that are ran in your local machine"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"server $>"})," for commands that are run in the remote server"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"local $> ssh paima@10.0.0.1\n"})}),"\n",(0,r.jsx)(n.p,{children:"You should see something as:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-31-generic x86_64)\n...\npaima@server-name:~$\n"})}),"\n",(0,r.jsx)(n.h4,{id:"ubuntu",children:"ubuntu"}),"\n",(0,r.jsxs)(n.p,{children:["Let's check you have ",(0,r.jsx)(n.code,{children:"Ubuntu"})," installed"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> lsb_release -a\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Shows the Linux Distribution and the Version ",(0,r.jsx)(n.code,{children:"Description: Ubuntu 24.04 LTS"})]}),"\n",(0,r.jsx)(n.h4,{id:"nginx",children:"nginx"}),"\n",(0,r.jsxs)(n.p,{children:["To verify your ",(0,r.jsx)(n.code,{children:"nginx"})," setup run: (This might change depending on your nginx setup)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"local $> curl http://10.0.0.1\n"})}),"\n",(0,r.jsx)(n.p,{children:"The response will be a webpage that contains:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p>\n"})}),"\n",(0,r.jsx)(n.h4,{id:"docker",children:"docker"}),"\n",(0,r.jsxs)(n.p,{children:["To verify your ",(0,r.jsx)(n.code,{children:"docker"})," setup run"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> docker run hello-world\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You should see some message that contains ",(0,r.jsx)(n.code,{children:"Hello from Docker!"})]}),"\n",(0,r.jsx)(n.p,{children:"Great, now you have all the tools."}),"\n",(0,r.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.p,{children:"Before continuing, make sure you compiled your project first."}),"\n",(0,r.jsx)(n.p,{children:"We will first need to create a folder"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> cd $HOME\nserver $> mkdir my-game\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now let's copy the main files we will need"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Copy DB Files\nlocal $> rsync db/migrations/init/init.sql paima@10.0.0.1:/home/paima/my-game\nlocal $> rsync db/docker/docker-compose.yml paima@10.0.0.1:/home/paima/my-game\n\n# Copy .env, config & extension files\nlocal $> rsync .env.production paima@10.0.0.1:/home/paima/my-game\nlocal $> rsync config.prod.yml paima@10.0.0.1:/home/paima/my-game\nlocal $> rsync extensions.yml paima@10.0.0.1:/home/paima/my-game\n\n# If your extensions.yml has ABI extensions, copy them as well\n# For example:\nlocal $> rsync contracts/evm/abi/@paima/evm-contracts/contracts/token/IInverseAppProjected1155.sol/IInverseAppProjected1155.json paima@10.0.0.1:/home/paima/my-game\n\n# Copy Paima Engine\nlocal $> rsync paima-engine-linux paima@10.0.0.1:/home/paima/my-game\n\n# Finally copy your Game Files\nlocal $> rsync -r packaged paima@10.0.0.1:/home/paima/my-game\n"})}),"\n",(0,r.jsx)(n.h3,{id:"run-database",children:"Run Database"}),"\n",(0,r.jsx)(n.p,{children:"We will be running the database in a docker container."}),"\n",(0,r.jsxs)(n.p,{children:["First we will edit the ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Use your favorite editor (We are using vi)\nserver $> cd $HOME/my-game\nserver $> vi docker-compose.yml \n"})}),"\n",(0,r.jsx)(n.p,{children:"and modify the service-postgres-volumes entry:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"    volumes:\n        - my-game-db:/var/lib/postgresql/data\n        - ./init.sql:/docker-entrypoint-initdb.d/init.sql\n"})}),"\n",(0,r.jsx)(n.p,{children:"and root volumes entry:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"volumes:\n  my-game-db:\n"})}),"\n",(0,r.jsx)(n.p,{children:"We recommend to update the password as well:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"environment:\n    POSTGRES_USER: postgres\n    POSTGRES_PASSWORD: some-password\n"})}),"\n",(0,r.jsx)(n.p,{children:"Start the database"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> cd $HOME/my-game\nserver $> docker compose up -d\n"})}),"\n",(0,r.jsx)(n.p,{children:"To view the database activity:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> cd $HOME/my-game\nserver $> docker compose logs -f\n"})}),"\n",(0,r.jsx)(n.p,{children:"If the setup went well you should see logs that contain"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'...\nLOG:  listening on IPv4 address "0.0.0.0", port 5432\nLOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"\nLOG:  database system is ready to accept connections\n'})}),"\n",(0,r.jsx)(n.h3,{id:"deploy-contracts",children:"Deploy Contracts"}),"\n",(0,r.jsxs)(n.p,{children:["For EVM, you can find the deployment steps ",(0,r.jsx)(n.a,{href:"https://docs.paimastudios.com/home/smart-contracts/evm/introduction#deploying-to-a-testnet-or-mainnet",children:"here"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Copy the addresses from the deploy steps, as we will be using them later."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Deployed Addresses\n\n...\ninternal_contracts#InverseAppProjected1155 - 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\ninternal_contracts#PaimaL2Contract - 0x5FC8d32690cc91D4c39d9d3abcBD16989F875707\n"})}),"\n",(0,r.jsx)(n.h3,{id:"run-game-backend-with-paima-engine",children:"Run Game Backend with Paima Engine"}),"\n",(0,r.jsx)(n.h4,{id:"setup-files",children:"Setup Files"}),"\n",(0,r.jsxs)(n.p,{children:["First edit your ",(0,r.jsx)(n.code,{children:".env.production"})," file:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Check the RPC and settings"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Update with the value for the deployed ",(0,r.jsx)(n.code,{children:"PaimaL2Contract"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"CONTRACT_ADDRESS=0x5FC8d32690cc91D4c39d9d3abcBD16989F875707"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Update with the current blockheight in your target blockchain"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"START_BLOCKHEIGHT=120000"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Update the DB password"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'DB_PW="some-password"'})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"NOTE Setup your DNS name with HTTPS. This setup is outside the scope of this tutorial, and depend on your DNS provider, Domain Name Provider and Certificate Authority."}),"\n",(0,r.jsxs)(n.p,{children:["For this example we are using the domain ",(0,r.jsx)(n.code,{children:"backend.my-game.com"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Update the ",(0,r.jsx)(n.code,{children:"BACKEND_URI=https://backend.my-game.com"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Edit ",(0,r.jsx)(n.code,{children:"config.production.yml"})," file, make sure your chain setup is correct and update the contract address:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"    paimaL2ContractAddress : '0x5FC8d32690cc91D4c39d9d3abcBD16989F875707'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Edit ",(0,r.jsx)(n.code,{children:"extensions.yml"})," file, update the ",(0,r.jsx)(n.code,{children:"abiPath"}),"(s) to match your rsync'd files and the ",(0,r.jsx)(n.code,{children:"contractAddress"}),"(es) to match the deployed contracts, and set the current ",(0,r.jsx)(n.code,{children:"startBlockheight"}),"(s) as the current block of the target blockchain(s)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:'    contractAddress: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"\n    abiPath: "./IInverseAppProjected1155.json"\n    startBlockHeight: 120000\n'})}),"\n",(0,r.jsx)(n.h4,{id:"backend-reverse-proxy",children:"Backend Reverse Proxy"}),"\n",(0,r.jsxs)(n.p,{children:["First setup your DNS to make ",(0,r.jsx)(n.code,{children:"backend.my-game.com"})," traffic reach this machine's IP."]}),"\n",(0,r.jsx)(n.p,{children:"Let's setup nginx tu reverse proxy the traffic.\nFirst lets create a setup file for nginx:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> sudo vi /etc/nginx/sites-available/backend.my-game.com\n"})}),"\n",(0,r.jsx)(n.p,{children:"And copy the contents setup a reverse proxy:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'server {\n\tlisten 80;\n\tserver_name backend.my-game.com;\n\tlocation / {\n\t\tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\t        proxy_set_header Host $host;\n\t        proxy_pass http://127.0.0.1:3333;\n\t        proxy_http_version 1.1;\n\t        proxy_set_header Upgrade $http_upgrade;\n\t        proxy_set_header Connection "upgrade";\n\t}\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Lets activate this setup and restart nginx"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> cd /etc/nginx/sites-enabled \nserver $> sudo ln -s ../sites-available/backend.my-game.com\nserver $> sudo systemctl reload nginx\n"})}),"\n",(0,r.jsx)(n.h4,{id:"backups-optional",children:"Backups (OPTIONAL)"}),"\n",(0,r.jsxs)(n.p,{children:["Install ",(0,r.jsx)(n.code,{children:"pg_dump"})," for automatic DB Backups."]}),"\n",(0,r.jsxs)(n.p,{children:["Install add the APT Repository (",(0,r.jsx)(n.a,{href:"https://www.postgresql.org/download/",children:"https://www.postgresql.org/download/"}),") and install postgress client tools."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> sudo apt install -y postgresql-common\nserver $> sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh\nserver $> sudo apt-get install postgresql-client-16\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now ",(0,r.jsx)(n.code,{children:"pg_dump"})," should be available in your system."]}),"\n",(0,r.jsx)(n.h4,{id:"game-service",children:"Game Service"}),"\n",(0,r.jsxs)(n.p,{children:["Now lets create a service named ",(0,r.jsx)(n.code,{children:"my-game.service"}),"\nEdit ",(0,r.jsx)(n.code,{children:"user-name"})," and ",(0,r.jsx)(n.code,{children:"my-game"})," to match your settings."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[Unit]\nDescription=My Game Backend\nAfter=syslog.target network.target\nDefaultDependencies=no\nStartLimitIntervalSec=0\n\n[Service]\nType=simple\nUser=paima\nGroup=paima\nEnvironment=HOME=/home/paima\nEnvironment=NODE_ENV=production\nEnvironment=NETWORK=testnet\nRestart=on-failure\nRestartSec=10s\nSuccessExitStatus=143\nKillMode=process\nKillSignal=SIGINT\nTimeoutStopSec=90\nWorkingDirectory=/home/paima/my-game\nExecStart=/home/paima/my-game/paima-engine-linux run\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,r.jsx)(n.p,{children:"Let's copy the service to the service folder"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> cd /etc/systemd/system/\nserver $> sudo ln -s /home/paima/my-game/my-game.service\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now to start the service"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> sudo systemctl start my-game.service\n"})}),"\n",(0,r.jsx)(n.p,{children:"And to view the logs"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> journalctl -u my-game.service -f\n"})}),"\n",(0,r.jsx)(n.p,{children:"You should see a message similar to this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[paima-runtime] Presync for evm finished at 0\n-------------------------------------\nBeginning Syncing & Processing Blocks\n-------------------------------------\n[paima-runtime::snapshots] Saving Snapshot: paima-snapshot-57342548.sql\n[paima-runtime::snapshots] Next snapshot scheduled at height 57364148\nBlock funnel 421614: #57342549-57342648\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now your backend is running!"}),"\n",(0,r.jsx)(n.h2,{id:"frontend",children:"Frontend"}),"\n",(0,r.jsxs)(n.p,{children:["First setup your DNS to make ",(0,r.jsx)(n.code,{children:"my-game.com"})," traffic reach this machine's IP."]}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:".env.production"})," file locally with the same values in your remote server."]}),"\n",(0,r.jsx)(n.p,{children:"Start by compiling your middleware with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"local $> npm run build\nlocal $> npm run pack:middleware\n"})}),"\n",(0,r.jsx)(n.p,{children:"This will create your middleware with the correct backend URL."}),"\n",(0,r.jsx)(n.p,{children:"Build your backend, this might be different depending on the technology stack you are using."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"local $> cd frontend\nlocal $> npm run build\n"})}),"\n",(0,r.jsx)(n.p,{children:"Let's create a folder in your remote machine"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> cd /var/www/html/\nserver $> sudo mkdir my-game-frontend\nserver $> sudo chown user-name my-game-frontend\nserver $> sudo chgrp user-name my-game-frontend\n"})}),"\n",(0,r.jsx)(n.p,{children:"And now let's upload your build to this folder"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"local $> rsync -r build/* paima@10.0.0.1:/var/www/html/my-game-frontend\n"})}),"\n",(0,r.jsx)(n.p,{children:"Next setup nginx file server.\nStart by creating a setup file for nginx:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> sudo vi /etc/nginx/sites-available/my-game.com\n"})}),"\n",(0,r.jsxs)(n.p,{children:["And copy the contents setup a reverse proxy",(0,r.jsx)(n.br,{}),"\n","NOTE: This might need some changes for your specific frontend technology stack"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"server {\n\tlisten 80;\n\troot /var/www/html/my-game-frontend;\n\n\tindex index.html index.htm;\n\n\tserver_name my-game.com;\n\n\tlocation / {\n\t\ttry_files $uri $uri/ =404;\n        # e.g., for React:\n        # try_files $uri $uri/ /index.html;\n\t}\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Activate this setup and restart nginx"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> cd /etc/nginx/sites-enabled \nserver $> sudo ln -s ../sites-available/my-game.com\nserver $> sudo systemctl reload nginx\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Congratulations!",(0,r.jsx)(n.br,{}),"\n","Now you have your game running in a production environment."]}),"\n",(0,r.jsx)(n.h3,{id:"updating-maintenance--logs",children:"Updating, Maintenance & Logs"}),"\n",(0,r.jsx)(n.h4,{id:"logs",children:"Logs"}),"\n",(0,r.jsx)(n.p,{children:"To view backend logs:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> journalctl -u my-game.service -f\n"})}),"\n",(0,r.jsx)(n.p,{children:"To view database logs:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> cd $HOME/my-game && docker compose logs -f\n"})}),"\n",(0,r.jsx)(n.h4,{id:"update-game-code",children:"Update Game Code"}),"\n",(0,r.jsxs)(n.p,{children:["Start by rebuilding the packaged files with ",(0,r.jsx)(n.code,{children:"npm run pack"}),", then you can repeat the uploading the ",(0,r.jsx)(n.code,{children:"/packaged"})," files and restart the service."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"server $> sudo systemctl stop my-game.service\n\n## OPTIONAL do a database backup, in case you need to recover the previous state.\n\n## Apply any database migrations your updated code might require.\n\nlocal $> rsync -r packaged paima@10.0.0.1:/home/paima/my-game\nserver $> sudo systemctl start my-game.service\n"})}),"\n",(0,r.jsx)(n.h4,{id:"update-frontend-code",children:"Update Frontend Code"}),"\n",(0,r.jsxs)(n.p,{children:["To update the frontend code, rebuild your middleware ",(0,r.jsx)(n.code,{children:"npm run pack:middleware"}),", then rebuild your frontend and upload:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"local $> rsync -r build/* paima@10.0.0.1:/var/www/html/my-game-frontend\n"})}),"\n",(0,r.jsx)(n.p,{children:"The server will generate backups, we recommend you keep them in a safe place, outside this same server to recover your state at any time."}),"\n",(0,r.jsx)(n.h4,{id:"reset-the-database",children:"Reset the database"}),"\n",(0,r.jsx)(n.p,{children:"If you need to wipe the database to reset from scratch, you can use the following"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker compose --env-file=.env.testnet down\ndocker volume rm my-game-db\ndocker compose --env-file=.env.testnet up -d\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>t});var r=s(7294);const a={},i=r.createContext(a);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);