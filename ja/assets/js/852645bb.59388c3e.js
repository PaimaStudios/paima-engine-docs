"use strict";(self.webpackChunkpaima_engine_docs=self.webpackChunkpaima_engine_docs||[]).push([[664],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3547:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={},o="Paima Funnel",l={unversionedId:"home/Reacting to Events/Funnel Types/Intro",id:"home/Reacting to Events/Funnel Types/Intro",title:"Paima Funnel",description:"A core library which allows a consumer to initialize a chain funnel object which holds state regarding:",source:"@site/docs/home/3 - Reacting to Events/3 - Funnel Types/1 - Intro.md",sourceDirName:"home/3 - Reacting to Events/3 - Funnel Types",slug:"/home/Reacting to Events/Funnel Types/Intro",permalink:"/ja/home/Reacting to Events/Funnel Types/Intro",draft:!1,editUrl:"https://github.com/PaimaStudios/paima-engine-docs/docs/home/3 - Reacting to Events/3 - Funnel Types/1 - Intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Chain Data Extensions (CDEs)",permalink:"/ja/home/Reacting to Events/chain-data-extensions"},next:{title:"Block Funnel",permalink:"/ja/home/Reacting to Events/Funnel Types/Block Funnel"}},s={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"paima-funnel"},"Paima Funnel"),(0,r.kt)("p",null,"A core library which allows a consumer to initialize a chain funnel object which holds state regarding:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The blockchain node (",(0,r.kt)("inlineCode",{parentName:"li"},"CHAIN_URI"),")"),(0,r.kt)("li",{parentName:"ul"},"The deployed Paima Contract address (",(0,r.kt)("inlineCode",{parentName:"li"},"CONTRACT_ADDRESS"),")"),(0,r.kt)("li",{parentName:"ul"},"The set of ",(0,r.kt)("a",{parentName:"li",href:"/ja/home/Reacting%20to%20Events/chain-data-extensions"},"Chain Data Extension (CDEs)")," that the developer provided")),(0,r.kt)("p",null,"Notably, funnels play a key role in allowing Paima to not just synchronize a single chain, but also combine multiple different data sources together such as DA layers, merging L1+L2 data together, or merging NFT data from different chains."),(0,r.kt)("p",null,"All Paima Funnels implement a simple interface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface ChainFunnel {\n  getExtensions: () => ChainDataExtension[];\n  extensionsAreValid: () => boolean;\n  recoverState: () => Promise<void>;\n  readData: (blockHeight: number) => Promise<ChainData[]>;\n  readPresyncData: (fromBlock: number, toBlock: number) => Promise<PresyncChainData[]>;\n}\n")),(0,r.kt)("p",null,"Multiple funnels are combined together based on the developer's needs using the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Decorator_pattern"},"decorator pattern"),", allowing to mix-and-match funnel types depending on the game's setup to get all the data they need."),(0,r.kt)("p",null,"At its core, Paima will call the ",(0,r.kt)("inlineCode",{parentName:"p"},"readData")," function according to ",(0,r.kt)("inlineCode",{parentName:"p"},"POLLING_RATE")," (which by default is based on ",(0,r.kt)("inlineCode",{parentName:"p"},"BLOCK_TIME"),"), and pass in the next expected block height (based off what is stored on disk by the Paima state machine)."),(0,r.kt)("p",null,"Paima funnel is in charge of filling the ",(0,r.kt)("inlineCode",{parentName:"p"},"ChainData")," which represents the combined output of all the different funnels for a block. Its type is as follows"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface ChainData {\n  timestamp: number;\n  blockHash: string;\n  blockNumber: number;\n  submittedData: SubmittedData[];\n  extensionDatums?: ChainDataExtensionDatum[];\n}\n")))}u.isMDXComponent=!0}}]);