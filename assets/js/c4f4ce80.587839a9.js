"use strict";(self.webpackChunkpaima_engine_docs=self.webpackChunkpaima_engine_docs||[]).push([[542],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=i,h=c["".concat(s,".").concat(d)]||c[d]||p[d]||r;return n?a.createElement(h,o(o({ref:t},m),{},{components:n})):a.createElement(h,o({ref:t},m))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7352:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:4},o="Environment Configuration Variables",l={unversionedId:"home/Setting Up Your Environment/environment-config-values",id:"home/Setting Up Your Environment/environment-config-values",title:"Environment Configuration Variables",description:"The following is a list of possible environment variables that can be configured for your project. These variables are read in the ENV class, located in paima-sdk/paima-utils/config.js. Please refer to that file for more information on default values.",source:"@site/docs/home/1 - Setting Up Your Environment/4 - environment-config-values.md",sourceDirName:"home/1 - Setting Up Your Environment",slug:"/home/Setting Up Your Environment/environment-config-values",permalink:"/home/Setting Up Your Environment/environment-config-values",draft:!1,editUrl:"https://github.com/PaimaStudios/paima-engine-docs/docs/home/1 - Setting Up Your Environment/4 - environment-config-values.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Deploying Your Own Stateful NFT Contract",permalink:"/home/Setting Up Your Environment/deploying-your-stateful-nft"},next:{title:"Paima Batcher",permalink:"/home/Setting Up Your Environment/paima-bacher"}},s={},u=[{value:"Required Variables",id:"required-variables",level:2},{value:"Optional Variables",id:"optional-variables",level:2},{value:"Other Variables",id:"other-variables",level:2},{value:"Customization",id:"customization",level:2},{value:"Example config file",id:"example-config-file",level:2}],m={toc:u};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"environment-configuration-variables"},"Environment Configuration Variables"),(0,i.kt)("p",null,"The following is a list of possible environment variables that can be configured for your project. These variables are read in the ENV class, located in ",(0,i.kt)("inlineCode",{parentName:"p"},"paima-sdk/paima-utils/config.js"),". Please refer to that file for more information on default values."),(0,i.kt)("h2",{id:"required-variables"},"Required Variables"),(0,i.kt)("p",null,"This section lists the environment variables that are mandatory to be filled in for your project to function properly."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Chain variables:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CHAIN_URI"),": The URI of the chain."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CHAIN_EXPLORER_URI"),": The URI of the chain explorer."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CHAIN_ID"),": The ID of the chain."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CHAIN_NAME"),": The name of the chain."))),(0,i.kt)("li",{parentName:"ul"},"Chain currency variables:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CHAIN_CURRENCY_NAME"),": The name of the chain currency."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CHAIN_CURRENCY_SYMBOL"),": The symbol of the chain currency."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CHAIN_CURRENCY_DECIMALS"),": The number of decimals for the chain currency."))),(0,i.kt)("li",{parentName:"ul"},"Database connection variables (self explanatory):",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DB_USER")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DB_PW")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DB_NAME")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DB_HOST")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DB_PORT")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CONTRACT_ADDRESS"),": The address of your Paima L2 contract."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"START_BLOCKHEIGHT"),": The block height at which the syncing process starts. This is usually the block height at which the contract was deployed."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BLOCK_TIME"),": The number of seconds it takes for new blocks to be created on the chain you deployed your L2 contract on."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BACKEND_URI"),": The URL of where your game node server will be deployed. This is used by the Middleware to interact with your game node."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"WEBSERVER_PORT"),": The port to use for running your game node server."),(0,i.kt)("li",{parentName:"ul"},"Security variables:"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CONCISE_GAME_NAME"),': This value will be prefixed to each concise command sent and should be a unique string for each game. E.g., "TDWOTJ" for Tower Defense: Wrath of the Jungle. This prevents replay attacks between different games. This is a mandatory requirement for Gaming Accounts Automatic Signing. ')),(0,i.kt)("h2",{id:"optional-variables"},"Optional Variables"),(0,i.kt)("p",null,"This section includes optional environment variables that have sensible default values if not explicitly set."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BATCHER_URI"),": The URL of the deployed batcher, if used."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DEFAULT_FEE"),": The blockchain fee to be set in transactions created by the Middleware."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ENABLE_DRY_RUN"),": Adds a ",(0,i.kt)("inlineCode",{parentName:"li"},"GET /dry_run")," endpoint for input testing. Use it to post game inputs to validate them without modifying the game state."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DEFAULT_FUNNEL_GROUP_SIZE"),": The number of blocks queried in one funnel sync step. If not set, a value of 100 is used. Generally no need to change this value."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"NODE_ENV"),": Used across modules to determine which .env file to read (",(0,i.kt)("inlineCode",{parentName:"li"},".env.$NODE_ENV"),"). Must be set separately if needed."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"FORCE_INVALID_PAIMA_DB_TABLE_DELETION"),": Instead of failing during DB initialization, it deletes invalid tables and recreates them (without the previous content). If turned off, resync from scratch is needed after a major ",(0,i.kt)("inlineCode",{parentName:"li"},"paima-sdk")," update that affects internal tables."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"STORE_HISTORICAL_GAME_INPUTS"),": If enabled, one of the internal tables stores all of the posted game inputs. Note that the table is currently accessible only through a direct DB connection."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"POLLING_RATE"),": The frequency at which to check for new block data. If not filled in, a value of ",(0,i.kt)("inlineCode",{parentName:"li"},"BLOCK_TIME - 0.1")," is used."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"STOP_BLOCKHEIGHT"),": The block at which the funnel stops syncing. This can be useful during development or tests."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SERVER_ONLY_MODE"),": Set this to run the game node without syncing new blocks.")),(0,i.kt)("h2",{id:"other-variables"},"Other Variables"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DEPLOYMENT"),": was used in the past to determine how often new blocks are emitted. It is now ",(0,i.kt)("em",{parentName:"li"},"deprecated")," and replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"BLOCK_TIME"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GAME_NODE_VERSION"),": defined statically in paima-sdk. Check used to ensure your game node is running with a compatible version of paima-engine. After a major upgrade and necessary adjustments, you should adjust the version on your side."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"NATIVE_NFT_SALE_PROXY"),": used in the NFT LvlUp template. It represents the contract address for your NFT sale proxy. See ",(0,i.kt)("a",{parentName:"li",href:"/home/Setting%20Up%20Your%20Environment/deploying-your-stateful-nft"},"deploying-your-stateful-nft")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/home/Reacting%20to%20Events/Chain%20Data%20Extensions/introduction"},"Chain data extensions"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DEFAULT_PRESYNC_STEP_SIZE"),": number of blocks to process in each step during initial presync phase. If not provided, a value of 1000 is used. Generally no need to change this value."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CDE_CONFIG_PATH"),": allows you to specify a custom location for your ",(0,i.kt)("inlineCode",{parentName:"li"},"extensions.yml")," that is used to initialize chain data extensions")))),(0,i.kt)("h2",{id:"customization"},"Customization"),(0,i.kt)("p",null,"You can extend the ENV class in your game to add your own game variables. Here's an example snippet:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'export class GameENV extends ENV {\n  static get LONG_CONFIG(): string {\n    return process.env.LONG_CONFIG || "defaultdefault";\n  }\n}\n')),(0,i.kt)("h2",{id:"example-config-file"},"Example config file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'## CHAIN DATA\n# Example: "https://rpc-devnet-cardano-evm.c1.milkomeda.com"\nCHAIN_URI=""\n# Example: "https://explorer-devnet-cardano-evm.c1.milkomeda.com"\nCHAIN_EXPLORER_URI=""\n# Example: "Milkomeda C1 Testnet"\nCHAIN_NAME=""\n# Example: "200101"\nCHAIN_ID=""\n# Note: The shorthand currency name/symbol shown in the user\'s wallet\n# Example: "mtADA"\nCHAIN_CURRENCY_SYMBOL=""\n# Note: The number of decimals of the native/gas asset of the chain\n# Example: "18"\nCHAIN_CURRENCY_DECIMALS=""\n# Note: This is in seconds as a float\n# Example: "2.0"\nBLOCK_TIME=""\n\n## SECURITY\n# Unique Game Security Prefix\n# Example: "MyGame"\nCONCISE_GAME_NAME=""\n\n## CONTRACT DEPLOYMENT\n# Example: "0xA02F7744868945A346Ee6994068F54D039683445"\nCONTRACT_ADDRESS=""\n# Note: This is the block height to start syncing from; usually the contract deployment block height\n# Example: "9000000"\nSTART_BLOCKHEIGHT=""\n\n## Middleware\n# Note: This is the URL which your middleware will use to interact with your game node webserver\n# Example: "http://localhost:3333"\nBACKEND_URI=""\n\n## MISC\n# Note: This is the port your game node webserver will use\n# Example: "3333"\nWEBSERVER_PORT=""\n# Note: This enables running your game node with just the webserver running, meaning no new blocks will be synced.\n# This is primarily useful for development, devops, or testing other edge cases where you want to interact with\n# the game node but not have the game state progress forward.\nSERVER_ONLY_MODE="false"\n\n## DATABASE\nDB_NAME="postgres"\nDB_USER="postgres"\nDB_PW="postgres"\nDB_HOST="localhost"\nDB_PORT="5432"\n\n# NFT\n# Note: This is the address of the native nft sale proxy contract\n# Example: "0xbD9e6bA880d6302A0B93456308a5A998Ffd8eb5E"\nNATIVE_NFT_SALE_PROXY=""\n')))}p.isMDXComponent=!0}}]);