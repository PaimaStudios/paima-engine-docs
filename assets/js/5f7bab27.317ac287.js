"use strict";(self.webpackChunkpaima_engine_docs=self.webpackChunkpaima_engine_docs||[]).push([[8702],{5670:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var i=t(5893),s=t(1151);const a={},o="General Interface",r={id:"home/game-node-api/events/general-interface",title:"General Interface",description:"Events are defined by two components:",source:"@site/docs/home/350-game-node-api/100-events/100-general-interface.md",sourceDirName:"home/350-game-node-api/100-events",slug:"/home/game-node-api/events/general-interface",permalink:"/home/game-node-api/events/general-interface",draft:!1,unlisted:!1,editUrl:"https://github.com/PaimaStudios/paima-engine-docs/tree/main/docs/home/350-game-node-api/100-events/100-general-interface.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/home/game-node-api/events/introduction"},next:{title:"Built-in events",permalink:"/home/game-node-api/events/builtin-events"}},l={},d=[];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"general-interface",children:"General Interface"}),"\n",(0,i.jsx)(n.p,{children:"Events are defined by two components:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["A ",(0,i.jsx)(n.code,{children:"name"}),", which must be unique in your app"]}),"\n",(0,i.jsxs)(n.li,{children:["A set of ",(0,i.jsx)(n.code,{children:"fields"})," which defines the event content. Fields are made up of","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["A ",(0,i.jsx)(n.code,{children:"name"})," for a ",(0,i.jsx)(n.em,{children:"positional argument"})]}),"\n",(0,i.jsxs)(n.li,{children:["A ",(0,i.jsx)(n.code,{children:"type"})," defined with ",(0,i.jsx)(n.a,{href:"https://github.com/sinclairzx81/typebox",children:"typebox"})," to ensure JSON compatibility"]}),"\n",(0,i.jsxs)(n.li,{children:["A ",(0,i.jsx)(n.code,{children:"indexed"})," boolean for whether or not events will be ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Database_index",children:"indexable"})," on this field"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Here is an example of an event that tracks completing quests in a game. In this example, we create an ",(0,i.jsx)(n.code,{children:"index"})," on the ",(0,i.jsx)(n.code,{children:"playerId"})," so a client could get realtime updates whenever a user has completing a quest."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { Type } from '@sinclair/typebox';\nimport { genEvent } from './types.js';\n\nconst QuestCompletionEvent = genEvent({\n  name: 'QuestCompletion',\n  fields: [\n    {\n      name: 'playerId',\n      type: Type.Integer(),\n      indexed: true,\n    },\n    {\n      name: 'questId',\n      type: Type.Integer(),\n    },\n  ],\n} as const);\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"TODO"}),": the API to register these events with Paima Engine itself is still under development"]}),"\n",(0,i.jsx)(n.h1,{id:"listening-to-events",children:"Listening to events"}),"\n",(0,i.jsx)(n.p,{children:"You can listen to these events easily from Javascript just by importing the event definition"}),"\n",(0,i.jsx)(n.p,{children:"A few things to note:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["You can ",(0,i.jsx)(n.code,{children:"filter"})," events based on the ",(0,i.jsx)(n.code,{children:"indexed"})," fields. Filtering is optional, and you can filter by any set (or subset) of ",(0,i.jsx)(n.code,{children:"indexed"})," fields of the event"]}),"\n",(0,i.jsxs)(n.li,{children:["You can register multiple subscribers to the ",(0,i.jsx)(n.em,{children:"same"})," event. Paima Engine will handle ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Multiplexing",children:"multiplexing"})," under the hood so that subscriptions with the same ",(0,i.jsx)(n.code,{children:"event+filter"})," combination do not cause duplicate network requests"]}),"\n",(0,i.jsxs)(n.li,{children:["You can call the ",(0,i.jsx)(n.code,{children:"unsubscribe"})," response at any time to lower the number of open connections you have"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { PaimaEventManager } from '@paima/sdk/events';\n\nconst unsubscribe = await PaimaEventManager.Instance.subscribe(\n  {\n    topic: QuestCompletionEvent,\n    filter: { playerId: undefined }, // all players\n  },\n  event => {\n    console.log(`Quest ${event.questId} cleared by ${event.playerId}`);\n  }\n);\n\n// later\nawait unsubscribe();\n"})}),"\n",(0,i.jsx)(n.h1,{id:"posting-new-events",children:"Posting new events"}),"\n",(0,i.jsxs)(n.p,{children:["You can publish messages from your game's state machine at any time. You need to provide ",(0,i.jsx)(n.em,{children:"all"})," fields (both those indexed and those that aren't). Paima Engine, under the hood, will take care of only sending these events to the clients that need them."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { PaimaEventManager } from '@paima/sdk/events';\n\nawait PaimaEventListener.Instance.sendMessage(QuestCompletionEvent, { questId: 5, playerId: 10 });\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>o});var i=t(7294);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);